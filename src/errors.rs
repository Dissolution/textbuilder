use thiserror::Error;

/// An error generated by `TextBuilder`
#[derive(Error, Debug)]
pub enum TextError {
    #[error("index `{0}` is out of range")]
    IndexOutOfRange(usize),
    #[error("Formatting failed: {0}")]
    Formatting(#[from] std::fmt::Error),
    #[error("Utf8 error: {0}")]
    Utf8Error(#[from] std::str::Utf8Error),
    #[error("Error: {0}")]
    Error(#[from] anyhow::Error),
}

/// Convert a `TextError` to a `std::fmt::Error`
impl From<TextError> for std::fmt::Error {
    fn from(text_error: TextError) -> Self {
        match text_error {
            TextError::Formatting(err) => err,
            _ => std::fmt::Error::default(),
        }
    }
}
